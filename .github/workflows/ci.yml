name: ci
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      - name: Restore
        run: dotnet restore backend/App.Api/App.Api.csproj
      - name: Build
        run: dotnet build backend/App.Api/App.Api.csproj -c Release --no-restore
      - name: Test
        run: echo "No tests yet"
  dockerize:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: build-test
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push API image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/api:${{ github.sha }}
  render-manifests:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Install kustomize
        run: |
          curl -sL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.1/kustomize_v5.4.1_linux_amd64.tar.gz | tar xz
          sudo mv kustomize /usr/local/bin/kustomize
      - name: Install kubeconform
        run: |
          curl -sL https://github.com/yannh/kubeconform/releases/download/v0.6.7/kubeconform-linux-amd64.tar.gz | tar xz
          sudo mv kubeconform /usr/local/bin/kubeconform
      - name: Render dev
        env:
          VERSION: ${{ github.sha }}
        run: |
          sed -i "s/{{VERSION}}/${VERSION}/g" deploy/k8s/base/kustomization.yaml
          kustomize build deploy/k8s/overlays/dev > manifests-dev.yaml
          kubeconform -strict -summary manifests-dev.yaml
          git checkout -- deploy/k8s/base/kustomization.yaml
      - name: Render staging
        env:
          VERSION: ${{ github.sha }}
        run: |
          sed -i "s/{{VERSION}}/${VERSION}/g" deploy/k8s/base/kustomization.yaml
          kustomize build deploy/k8s/overlays/staging > manifests-staging.yaml
          kubeconform -strict -summary manifests-staging.yaml
          git checkout -- deploy/k8s/base/kustomization.yaml
      - name: Render prod
        env:
          VERSION: ${{ github.sha }}
        run: |
          sed -i "s/{{VERSION}}/${VERSION}/g" deploy/k8s/base/kustomization.yaml
          kustomize build deploy/k8s/overlays/prod > manifests-prod.yaml
          kubeconform -strict -summary manifests-prod.yaml
          git checkout -- deploy/k8s/base/kustomization.yaml
      - uses: actions/upload-artifact@v4
        with:
          name: k8s-manifests
          path: |
            manifests-dev.yaml
            manifests-staging.yaml
            manifests-prod.yaml
