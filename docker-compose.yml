# No "version:" header needed with Compose v2+
services:
  db:
    image: postgres:16
    container_name: assets-db
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 10

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: assets-keycloak
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 20
    depends_on:
      db:
        condition: service_started

  flowable:
    image: flowable/flowable-rest:6.8.0
    container_name: assets-flowable
    environment:
      FLOWABLE_DATABASE_TYPE: postgres
      FLOWABLE_DATABASE_HOST: db
      FLOWABLE_DATABASE_PORT: 5432
      FLOWABLE_DATABASE_NAME: appdb
      FLOWABLE_DATABASE_USERNAME: app
      FLOWABLE_DATABASE_PASSWORD: app
      FLOWABLE_DATABASE_SCHEMA_UPDATE: true
      FLOWABLE_REST_APP_ADMIN_USER: rest-admin
      FLOWABLE_REST_APP_ADMIN_PASSWORD: test
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "-u", "rest-admin:test", "http://localhost:8080/flowable-rest/service/management/engine"]
      interval: 15s
      timeout: 5s
      retries: 20
    depends_on:
      db:
        condition: service_started

  api:
    # You can also use an image: ghcr.io/<owner>/<repo>/api:latest if you push images
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: assets-api
    environment:
      ASPNETCORE_URLS: http://+:8080
      ASPNETCORE_ENVIRONMENT: Development
      # NOTE: this key must match your DbContext "Default" name
      ConnectionStrings__Default: Host=db;Port=5432;Database=appdb;Username=app;Password=app
      # OIDC authority (API is inside the network, so use service DNS)
      OIDC__AUTHORITY: http://keycloak:8080/realms/moe
      # Flowable (colon keys â†’ double underscore)
      FLOWABLE__BASEURL: http://flowable:8080/flowable-rest
      FLOWABLE__USERNAME: rest-admin
      FLOWABLE__PASSWORD: test
      # OCR: leave fake for E2E; images sync, PDFs handled later by async worker
      OCR__PROVIDER: Fake
      OCR__CONFIDENCETHRESHOLD: "0.85"
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 30
    depends_on:
      db:
        condition: service_started
      flowable:
        condition: service_healthy
      keycloak:
        condition: service_healthy
